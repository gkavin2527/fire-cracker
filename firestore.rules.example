
rules_version = '2';

// Helper function to check if the user is an admin
// IMPORTANT: Replace 'YOUR_ADMIN_USER_UID_HERE' with your actual Firebase Admin User UID
function isAdmin() {
  return request.auth != null && request.auth.uid == 'YOUR_ADMIN_USER_UID_HERE';
}

service cloud.firestore {
  match /databases/{database}/documents {

    // Products:
    // - Allow public read access for everyone.
    // - Allow admin write access (create, update, delete).
    match /products/{productId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // Categories:
    // - Allow public read access for everyone.
    // - Allow admin write access.
    match /categories/{categoryId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // Users:
    // - Allow users to read and write their own profile data.
    // - Admins can read any user profile (for management purposes).
    // - Deny listing of all users for non-admins to protect privacy.
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      allow read: if isAdmin(); // Admins can read user profiles
      // No allow list rule here for non-admins.
    }

    // Orders:
    // - Allow users to create their own orders.
    // - Allow users to read their own orders.
    // - Allow admins to read and update any order (e.g., for status changes).
    // - Deny listing of all orders for non-admins.
    match /orders/{orderId} {
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      allow read: if request.auth != null && resource.data.userId == request.auth.uid;
      allow read, update: if isAdmin();
      // No allow list rule here for non-admins.
    }

    // Hero Images:
    // - Allow public read access for everyone (e.g., for homepage carousel).
    // - Allow admin write access (create, update, delete).
    match /heroImages/{heroImageId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // Deny all other unmatched paths by default.
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
